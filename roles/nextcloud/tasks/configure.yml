---
- name: Wait for nextcloud container is healthy
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: "docker compose ps {{ nextcloud_service_name }} | grep '(healthy)'"
  register: cmd_res
  retries: 20
  delay: 15
  until: cmd_res.rc == 0

- name: Set admin email
  tags: [ 'nextcloud/configure/admin_email' ]
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: "{{ nextcloud_occ_bin }} user:setting {{ nextcloud_admin_username }} settings email {{ nextcloud_admin_email }}"

- name: Configure system
  tags: [ 'nextcloud/configure/miscs' ]
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: |
      {{ nextcloud_occ_bin }} config:app:set admin_audit logfile --value=/dev/stdout && \
      {{ nextcloud_occ_bin }} config:system:set logfile --value '/dev/stdout' && \
      {{ nextcloud_occ_bin }} config:system:set allow_user_to_change_display_name --value false --type boolean && \
      {{ nextcloud_occ_bin }} config:system:set hide_login_form --value true --type boolean && \
      {{ nextcloud_occ_bin }} config:system:set lost_password_link --value '#'

- name: Configure cron
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: "{{ nextcloud_occ_bin }} background:cron"

- name: Configure groups
  ansible.builtin.include_tasks: configure_groups.yml
  args:
    apply:
      tags: [ 'nextcloud/configure/groups' ]
  tags: [ 'always' ]

- name: Configure apps
  ansible.builtin.include_tasks: configure_apps.yml
  args:
    apply:
      tags: [ 'nextcloud/configure/apps' ]
  tags: [ 'always' ]

- name: Configure external storages
  ansible.builtin.include_tasks: configure_external_storages.yml
  args:
    apply:
      tags: [ 'nextcloud/configure/external_storages' ]
  tags: [ 'always' ]

- name: OIDC configuration
  when: nextcloud_sso_oidc_enabled
  tags: [ 'nextcloud/oidc' ]
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: |
      {{ nextcloud_occ_bin }} config:app:set sociallogin custom_providers \
        --value='{
          "custom_oidc": [
            {
              "name": "gitlab_oidc",
              "title": "Gitlab",
              "authorizeUrl": "https://gitlab.my-domain.org/oauth/authorize",
              "tokenUrl": "https://gitlab.my-domain.org/oauth/token",
              "userInfoUrl": "https://gitlab.my-domain.org/oauth/userinfo",
              "logoutUrl": "",
              "clientId": "$my_application_id",
              "clientSecret": "$my_super_secret_secret",
              "scope": "openid",
              "groupsClaim": "groups",
              "style": "gitlab",
              "defaultGroup": ""
            }
          ]
        }'

- name: SAML general configuration
  when: nextcloud_sso_saml_enabled
  tags: [ 'nextcloud/saml' ]
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: |
      {{ nextcloud_occ_bin }} config:app:set user_saml general-allow_multiple_user_back_ends --value {{ nextcloud_sso_saml_allow_multiple_user_back_ends }} && \
      {{ nextcloud_occ_bin }} config:app:set user_saml general-use_saml_auth_for_desktop --value {{ nextcloud_sso_saml_use_saml_auth_for_desktop }} && \
      {{ nextcloud_occ_bin }} config:app:set user_saml general-require_provisioned_account --value {{ nextcloud_sso_saml_require_provisioned_account }}

- name: SAML configuration
  when: nextcloud_sso_saml_enabled
  tags: [ 'nextcloud/saml' ]
  ansible.builtin.shell:
    chdir: "{{ nextcloud_install_path }}"
    cmd: |
      {{ nextcloud_occ_bin }} saml:config:set \
        --general-idp0_display_name {{ nextcloud_sso_saml_name }} \
        --general-uid_mapping Subject \
        --idp-singleSignOnService.url {{ nextcloud_sso_saml_url }} \
        --idp-singleLogoutService.url {{ nextcloud_sso_saml_logout_url }} \
        --idp-entityId {{ nextcloud_sso_saml_url }} \
        --idp-x509cert {{ nextcloud_sso_saml_fingerprint }} \
        1
